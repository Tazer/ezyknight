@model dynamic
@{
    ViewBag.Title = "title";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>ezyKnight</h2>
<div>
    <canvas id="gameArea" height="500" width="500" />
    ​​​​​​​​​​​​​​​
</div>
<div>
    <ul id="chat">
    </ul>
    <input type="text" id="chatMessage" />
    <input type="button" id="chatButton" value="Send" />


    <br />
    <br />
    Playername:
    <input type="text" id="playerName" /><br />
    Color =
    <input type="text" id="playerColor" />
    <input type="button" id="submitPlayerName" value="Submit" /><br />
    <input type="button" value="Send join to everyone" id="sendPlayerCollection" />
</div>
@section script{
    <script language="javascript">

        var config = {
            tileSize: 26,
            refreshRate: 1000 / 30 // ~30fps
        };

        var playerX = 0;
        var playerY = 0;
        var players = [];
        var hasJoined = false;
        $(function () {
            $.connection.hub.start().done(function () { console.log("Now connected!"); }).fail(function () { console.log("Could not Connect!"); });
            var gameHub = $.connection.gameHub;
            console.log(gameHub.client);
            $("#submitPlayerName").click(function () {
                gameHub.server.join($("#playerName").val(), $("#playerColor").val()).done(function (result) {

                    hasJoined = true;

                }).fail(function (error) {
                    console.log(error);
                });
            });

            $("#sendPlayerCollection").click(function () {
                gameHub.server.sendPlayers();
            });

            gameHub.client.joined = function (result) {
                console.log(result);
                players = [];
                $.each(result, function () {
                    players.push({ id: this.Value.Id, name: this.Value.Name, x: this.Value.X, y: this.Value.Y, color: this.Value.Color });
                });
            };
            gameHub.client.addChatMessage = function (message) {
                $("#chat").append("<li>" + message + "</li>");
            };
            gameHub.client.collision = function (player) {
                console.log(player);
                playerX = player.X;
                playerY = player.Y;
            };
            gameHub.client.moved = function (player) {
                $.each(players, function () {
                    if (this.id == player.Id) {
                        this.x = player.X;
                        this.y = player.Y;
                    }
                });
            };

            $("#chatButton").click(function () {
                var message = $("#chatMessage").val();
                $("#chat").append("<li>You: " + message + "</li>");
                gameHub.server.send(message)
                    .done(function (result) {

                    })
                    .fail(function (error) {
                        console.log(error);
                    });
            });

            document.onkeyup = function (e) {
                if (hasJoined == false) {
                    return;
                }
                console.log(e.keyCode);
                switch (e.keyCode) {
                    case 87: //W
                        playerY -= config.tileSize;
                        break;
                    case 65:
                        playerX -= config.tileSize;
                        break;
                    case 83:
                        playerY += config.tileSize;
                        break;
                    case 68:
                        playerX += config.tileSize;
                        break;
                    default:
                        break;
                }
                gameHub.server.move(playerX, playerY).fail(function (error) { console.log(error); });
            };

        });

        function clearPlayers() {
            var canvas = document.getElementById("gameArea");
            var player = canvas.getContext("2d");
            player.clearRect(0, 0, 500, 500);
        }
        function drawPlayer() {
            clearPlayers();
            var canvas = document.getElementById("gameArea");
            $.each(players, function () {
                var player = canvas.getContext("2d");
                player.fillStyle = this.color;
                player.fillRect(this.x, this.y, config.tileSize, config.tileSize);
                player.font = "15px Verdana"
                player.fillText(this.name, this.x, this.y - config.tileSize);
            });

        };

        function init() {
            setInterval(function () { drawPlayer() }, config.refreshRate);
        }

        $(function () {
            init();
        });

    </script>
}
